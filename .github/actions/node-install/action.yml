name: Setup Node.js environment
description: Setup a Node.js environment by adding problem matchers and optionally downloading and adding it to the PATH.
author: Hiredreviews
inputs:
  always-auth:
    description: Set always-auth in npmrc
    default: false
  node-version:
    description: Version 20.x
  node-version-file:
    description: package.json
  architecture:
    description: Target architecture x64
  check-latest:
    description: check for the latest available version that satisfies the version spec
    default: false
  registry-url:
    description: Optional registry to set up for auth  .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
  scope:
    description: Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/)
  token:
    description: Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting
    default: ${{ github.server_url == 'https://github.com' && github.token || '' }}
  cache:
    description: Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
  cache-dependency-path:
    description: Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.'
    input:
      dist
      #       escape valve for someone having issues or needing the absolute latest which isn't cached yet
outputs:
  cache-hit: 
    description: A boolean value to indicate if a cache was hit
  node-version:
    description: The installed node version.
runs:
  using: node20
  main: apps/marketing/*/
  post: apps/web/*/
  post-if: success()
